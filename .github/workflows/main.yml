name: Build and Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true  

      - name: Setup Java 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
    
      - name: Build using Maven
        run: mvn clean install
    
      - name: Docker setup
        uses: docker/setup-buildx-action@v3

      - name: Create or update VERSION file
        run: |
          if [ ! -f VERSION ]; then
            echo "1.0.0" > VERSION
          fi

      - name: Automatic Versioning
        id: versioning_job
        uses: nicupavel/action-files-version-increment@v3
        with:
          file_path: VERSION
          increment: patch

      - name: Get the output time
        run: echo "The time was ${{ steps.versioning_job.outputs.time }}"

      - name: Get list of modified files
        run: echo "Modified files ${{ steps.versioning_job.outputs.modified_files }}"

      - name: Read Version
        id: version
        run: echo "VERSION=$(cat VERSION)" >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin 471112905705.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com

      - name: Build and Push Docker Image
        run: |
          docker build -t 471112905705.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/local:example-${{ env.VERSION }} .
          docker push 471112905705.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/local:example-${{ env.VERSION }}
