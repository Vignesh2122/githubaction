name: Build and Analyze

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build and Analyze
    runs-on: ubuntu-latest

    steps:
      # Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch full history for all branches and tags

      # Set up JDK 17 for building the project
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'adoptopenjdk'

      # Cache SonarQube analysis data (to speed up subsequent runs)
      - name: Cache SonarQube packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-sonar

      # Cache Maven dependencies (to speed up builds)
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # Build, run tests, and analyze code with SonarQube
      - name: Build, Test, and Analyze with SonarQube
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          mvn clean install -B
          mvn sonar:sonar -Dsonar.login=$SONAR_TOKEN -Dsonar.host.url=$SONAR_HOST_URL

      # SonarQube Quality Gate Check
      - name: Wait for SonarQube Quality Gate
        uses: sonarsource/sonarcloud-github-action@v2.0
        with:
          sonar-token: ${{ secrets.SONAR_TOKEN }}
          sonar-host-url: ${{ secrets.SONAR_HOST_URL }}

      # Fail the build if the SonarQube Quality Gate fails
      - name: Fail the build if Quality Gate failed
        if: failure()
        run: |
          echo "The SonarQube Quality Gate failed!"
          exit 1

